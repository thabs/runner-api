services:
  api:
    container_name: runner-api
    build:
      context: .
      target: development
    command: npm run start:dev runner-api
    ports:
      - '3008:3008'
    env_file:
      - .env.development
    depends_on:
      - postgres
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  postgres:
    container_name: postgres
    build:
      context: .
      dockerfile: Dockerfile-db
    restart: always
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: runner
    volumes:
      - ./db:/docker-entrypoint-initdb.d/
      - postgres_data:/var/lib/postgresql/data

  pgadmin:
    container_name: pgadmin4
    image: dpage/pgadmin4
    restart: always
    ports:
      - '5050:80'
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin

volumes:
  postgres_data:
  pgadmin_data:
